[{"E:\\Projekty\\Webstorm\\gis\\src\\index.js":"1","E:\\Projekty\\Webstorm\\gis\\src\\App.js":"2","E:\\Projekty\\Webstorm\\gis\\src\\reportWebVitals.js":"3","E:\\Projekty\\Webstorm\\gis\\src\\components\\Header.js":"4","E:\\Projekty\\Webstorm\\gis\\src\\themes\\main.js":"5","E:\\Projekty\\Webstorm\\gis\\src\\screens\\HomeScreen.js":"6","E:\\Projekty\\Webstorm\\gis\\src\\screens\\MapScreen.js":"7","E:\\Projekty\\Webstorm\\gis\\src\\services\\DataService.js":"8","E:\\Projekty\\Webstorm\\gis\\src\\themes\\styles.js":"9","E:\\Projekty\\Webstorm\\gis\\src\\screens\\LoadingScreen.js":"10","E:\\Projekty\\Webstorm\\gis\\src\\components\\SideBar.js":"11","E:\\Projekty\\Webstorm\\gis\\src\\enums\\enums.js":"12","E:\\Projekty\\Webstorm\\gis\\src\\firebase.js":"13","E:\\Projekty\\Webstorm\\gis\\src\\screens\\404.js":"14","E:\\Projekty\\Webstorm\\gis\\src\\screens\\ErrorPage.js":"15","E:\\Projekty\\Webstorm\\gis\\src\\screens\\NotLoaded.js":"16","E:\\Projekty\\Webstorm\\gis\\src\\services\\RequestService.js":"17"},{"size":1032,"mtime":1607011145307,"results":"18","hashOfConfig":"19"},{"size":2782,"mtime":1607954695657,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2267,"mtime":1607955238415,"results":"22","hashOfConfig":"19"},{"size":693,"mtime":1606962439399,"results":"23","hashOfConfig":"19"},{"size":3208,"mtime":1607955288931,"results":"24","hashOfConfig":"19"},{"size":8348,"mtime":1607955869720,"results":"25","hashOfConfig":"19"},{"size":2637,"mtime":1607959483550,"results":"26","hashOfConfig":"19"},{"size":629,"mtime":1607116949181,"results":"27","hashOfConfig":"19"},{"size":858,"mtime":1606962616730,"results":"28","hashOfConfig":"19"},{"size":4393,"mtime":1607002448874,"results":"29","hashOfConfig":"19"},{"size":158,"mtime":1607001748237,"results":"30","hashOfConfig":"19"},{"size":654,"mtime":1607010860913,"results":"31","hashOfConfig":"32"},{"size":904,"mtime":1607954756980,"results":"33","hashOfConfig":"19"},{"size":1254,"mtime":1607954756966,"results":"34","hashOfConfig":"19"},{"size":792,"mtime":1607288707147,"results":"35","hashOfConfig":"19"},{"size":312,"mtime":1607954756957,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"15rb3kq",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1jsncyk",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"E:\\Projekty\\Webstorm\\gis\\src\\index.js",[],["77","78"],"E:\\Projekty\\Webstorm\\gis\\src\\App.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\reportWebVitals.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\components\\Header.js",["79"],"import React from 'react'\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport mainTheme from \"../themes/main\";\r\nimport ReactSwitch from \"react-switch\";\r\nimport {ReactComponent as Moon} from \"../assets/icons/moon.svg\";\r\n\r\nconst mt = mainTheme;\r\n\r\nconst Header = props => {\r\n\r\n    return (\r\n        <nav style={wrapper}>\r\n            <NavLink className='link' exact to='/' style={firstLink} activeStyle={activeLink}>\r\n                Michał Kalinowski - GIS\r\n            </NavLink>\r\n            <NavLink className='link' exact to='/mapgddik' style={link} activeStyle={activeLink}>\r\n                Mapa utrudnień GDDiK\r\n            </NavLink>\r\n            <div className='' style={{...link,  position: 'relative'}} >\r\n                <div style={{position: 'absolute', height: '100%', width: '100%', background: '#373232', opacity: 0.8}} />\r\n                Mapa utrudnień BING\r\n            </div>\r\n            <div style={{flexGrow: 1}}></div>\r\n            <div style={modeStyle}>\r\n                <Moon style={moon}/>\r\n                <span style={{marginRight: '1vw'}} >Tryb ciemny</span>\r\n                <ReactSwitch checked={props.mode} onChange={(checked) => {\r\n                    props.setMode(checked);\r\n                }}/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst moon = {\r\n    height: '3vh',\r\n    width: 'auto',\r\n    fill: mt.colorsDark.lightYellow\r\n}\r\n\r\nconst modeStyle = {\r\n    color: mt.colorsDark.lightYellow,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: mt.fonts.size.s,\r\n    gap: '1vw',\r\n    marginRight: '2vw'\r\n}\r\n\r\nconst wrapper = {\r\n    height: '8vh',\r\n    width: '100%',\r\n    background: mt.colorsDark.mainBack,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n}\r\n\r\nconst link = {\r\n    textDecoration: 'none',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '8vh',\r\n    padding: '0 2vw',\r\n    color: mt.colorsDark.strongYellow,\r\n    fontSize: mt.fonts.size.s\r\n}\r\n\r\nconst firstLink = {\r\n    ...link,\r\n    fontSize: mt.fonts.size.l,\r\n    fontWeight: 700\r\n}\r\n\r\nconst activeLink = {\r\n    background: mt.colorsDark.strongYellow,\r\n    color: mt.colorsDark.mainBack\r\n}\r\n\r\nexport default Header;","E:\\Projekty\\Webstorm\\gis\\src\\themes\\main.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\screens\\HomeScreen.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\screens\\MapScreen.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"import React, {useEffect, useRef, useState} from 'react'\r\nimport L from 'leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport 'mapbox/dist/mapbox-sdk'\r\nimport wIcon from '../assets/icons/wIcon.svg'\r\nimport wIconWarn from '../assets/icons/wIconWarn.svg'\r\nimport uIcon from '../assets/icons/uIcon.svg'\r\nimport uIconWarn from '../assets/icons/uIconWarn.svg'\r\nimport infoIcon from '../assets/icons/info.svg'\r\nimport blocIcon from '../assets/icons/blockIcon.svg'\r\nimport 'leaflet.markercluster/dist/MarkerCluster.css'\r\nimport 'leaflet.markercluster/dist/leaflet.markercluster'\r\nimport mainTheme from \"../themes/main\";\r\nimport styles from \"../themes/styles\";\r\nimport SideBar from \"../components/SideBar\";\r\n\r\n\r\nconst mt = mainTheme;\r\nconst mapboxDarkUrl = 'https://api.mapbox.com/styles/v1/kalin8900/cki7kii5f117d19o8wwvay8ma/tiles/256/{z}/{x}/{y}@2x?access_token='\r\nconst mapboxNormalUrl = 'https://api.mapbox.com/styles/v1/kalin8900/cki7hwpxz00f219qtfwvhzeir/tiles/256/{z}/{x}/{y}@2x?access_token='\r\nconst token = process.env[\"REACT_APP_API_KEY\"];\r\n\r\nfunction isObject(val) {\r\n    if(val === null) {\r\n        return false;\r\n    }\r\n    return ((typeof val === 'function') || (typeof val === 'object'));\r\n}\r\n\r\nconst generateLayer = (icon, type, data, roadClosed = undefined) => {\r\n\r\n    const marker = L.icon({\r\n        iconUrl: icon,\r\n        iconSize: [38, 38],\r\n        iconAnchor: null,\r\n        popupAnchor: [-3, -17]\r\n    });\r\n\r\n\r\n    return L.geoJSON(data, {\r\n        filter: feature => {\r\n            return (type.includes(feature.properties.type)) && (feature.properties.roadClosed === roadClosed);\r\n        },\r\n        pointToLayer: (feature, latlng) => {\r\n            return L.marker(latlng, {\r\n                icon: marker\r\n            }).on('mouseover', function() {\r\n                this.bindPopup(() => {\r\n                    let ret = \"<span style=\\\"display: flex; justify-content: center; align-items: center; flex-flow: column\\\">\";\r\n                    if(feature.properties.roadClosed)\r\n                        ret += \"<span style=\\\"color: red\\\"><b>\" + \"DROGA ZAMKNIĘTA\" + \"</b></span>\"\r\n\r\n                    ret += \"<span style=\\\"text-align: center\\\">\" + feature.properties.name + \"</span>\"\r\n\r\n                    ret += \"<span style=\\\"text-align: center;\\\">\" + \"Data zakończenia \" + feature.properties.end.split(\r\n                        'T')[1] + ' ' + feature.properties.end.split('T')[0] + \"</span>\"\r\n\r\n                    ret += \"</span>\"\r\n\r\n                    return ret;\r\n                }).openPopup().on('click', () => {\r\n                    myMap.flyTo(latlng, 15);\r\n                    setTimeout(() => {\r\n                        this.bindPopup(() => {\r\n                            let ret = \"<span style=\\\"display: flex; justify-content: center; align-items: center; flex-flow: column\\\">\";\r\n                            if(feature.properties.roadClosed)\r\n                                ret += \"<span style=\\\"color: red\\\"><b>\" + \"DROGA ZAMKNIĘTA\" + \"</b></span>\"\r\n\r\n                            ret += \"<span style=\\\"text-align: center\\\">\" + feature.properties.name + \"</span>\"\r\n\r\n                            ret += \"<span style=\\\"text-align: center;\\\">\" + \"Data zakończenia \" + feature.properties.end.split(\r\n                                'T')[1] + ' ' + feature.properties.end.split('T')[0] + \"</span>\"\r\n\r\n                            if(!isObject(feature.properties.info))\r\n                                ret += \"<span style=\\\"text-align: center;\\\">\" + feature.properties.info + \"</span>\"\r\n                            else\r\n                                ret += \"<span style=\\\"text-align: center;\\\"><b>\" + \"Brak informacji\" + \"</b></span>\"\r\n\r\n                            ret += \"</span>\"\r\n\r\n                            return ret;\r\n                        }, {closeButton: true}).openPopup();\r\n                    }, 2500)\r\n                });\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nlet myMap;\r\n\r\nconst generateCluster = (className) => {\r\n    return L.markerClusterGroup({\r\n        showCoverageOnHover: true,\r\n        iconCreateFunction: (cluster) => {\r\n            return L.divIcon({\r\n                html: \"<div style=\\\"height: 40px; width: 40px; display: flex !important; justify-content: center; align-items: center; color: #212121; text-align: center\\\">\" + cluster.getChildCount() + \"</div>\",\r\n                className: className,\r\n                iconSize: L.point(40, 40)\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nconst uMarkers = generateCluster('cluster yellow')\r\nconst iMarkers = generateCluster('cluster blue')\r\n\r\nconst MapScreen = props => {\r\n\r\n    //hardcoded\r\n    const [uTypes, setUTypes] = useState(generateLayer(uIcon, ['U'], props.data, false));\r\n    const [uTypesWarn, setUWarnTypes] = useState(generateLayer(uIconWarn, ['U'], props.data, true));\r\n    const [infoTypes, setInfoTypes] = useState(generateLayer(infoIcon, ['I'], props.data, false));\r\n    const [wTypes, setWTypes] = useState(generateLayer(wIcon, ['W'], props.data, false));\r\n    const [wTypesWarn, setWWarnTypes] = useState(generateLayer(wIconWarn, ['W'], props.data, true));\r\n    const [closedRoads, setClosedRoads] = useState(generateLayer(blocIcon, ['I', 'U', 'W'], props.data, true))\r\n\r\n    const [activeLayers, setActiveLayers] = useState(['U', 'I', \"W\", 'C']);\r\n\r\n    useEffect(() => {\r\n        myMap = L.map('map', {minZoom: 6}).setView([52.5, 19], 6);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(props.mode)\r\n            L.tileLayer(\r\n                mapboxDarkUrl + token,\r\n                {\r\n                    attribution: '<a href=\"https://kalin8900.github.io/app\"> Michał Kalinowski</a> | © <a href=\"https://apps.mapbox.com/feedback/\">Mapbox</a> | © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n                }).addTo(myMap);\r\n        else\r\n            L.tileLayer(\r\n                mapboxNormalUrl + token,\r\n                {\r\n                    attribution: '<a href=\"https://kalin8900.github.io/app\"> Michał Kalinowski</a> | © <a href=\"https://apps.mapbox.com/feedback/\">Mapbox</a> | © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n                }).addTo(myMap);\r\n\r\n        if(!props.mapLoaded)\r\n        {\r\n            uMarkers.addLayer(uTypes).addLayer(uTypesWarn);\r\n            iMarkers.addLayer(infoTypes);\r\n            props.setMapLoaded(true)\r\n        }\r\n\r\n    }, [props.mode])\r\n\r\n    //hardCoded\r\n    useEffect(() => {\r\n        if(myMap) {\r\n            if(activeLayers.includes('C'))\r\n                myMap.addLayer(closedRoads)\r\n            else\r\n                myMap.removeLayer(closedRoads)\r\n            if(activeLayers.includes('U'))\r\n                myMap.addLayer(uMarkers);\r\n            else\r\n                myMap.removeLayer(uMarkers);\r\n            if(activeLayers.includes('W'))\r\n                myMap.addLayer(wTypes).addLayer(wTypesWarn)\r\n            else\r\n                myMap.removeLayer(wTypes).removeLayer(wTypesWarn)\r\n            if(activeLayers.includes('I'))\r\n                myMap.addLayer(iMarkers)\r\n            else\r\n                myMap.removeLayer(iMarkers);\r\n        }\r\n\r\n    }, [activeLayers, props.mode])\r\n\r\n\r\n    return (\r\n        <main style={styles.page}>\r\n            <SideBar activeLayers={activeLayers} style={sidebar} setActiveLayers={setActiveLayers}/>\r\n            <aside style={time}>\r\n                <span>Dane zebrane o godzinie: </span><span style={{marginLeft: '0.5vw'}}> {props.time}</span>\r\n            </aside>\r\n            <div id='map' style={map}>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nconst time = {\r\n    position: 'absolute',\r\n    width: '35%',\r\n    height: '5vh',\r\n    background: mt.colorsDark.mainBack,\r\n    top: '5%',\r\n    left: '32.5%',\r\n    zIndex: 5,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    color: mt.colorsDark.lightYellow,\r\n    fontSize: mt.fonts.size.s,\r\n    border: '2px solid ' + mt.colorsDark.strongYellow\r\n}\r\n\r\n\r\nconst map = {\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 4,\r\n}\r\n\r\nconst sidebar = {\r\n    width: '12vw',\r\n    height: '60%',\r\n    position: 'absolute',\r\n    top: '25%',\r\n    left: '2%',\r\n    zIndex: 5,\r\n    margin: 0,\r\n    padding: 0,\r\n    background: mt.colorsDark.mainBack,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n}\r\n\r\n\r\nexport default MapScreen;","E:\\Projekty\\Webstorm\\gis\\src\\services\\DataService.js",["97"],"E:\\Projekty\\Webstorm\\gis\\src\\themes\\styles.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\screens\\LoadingScreen.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\components\\SideBar.js",["98"],"import React from 'react'\r\nimport mainTheme from \"../themes/main\";\r\nimport {ReactComponent as RoadWork} from '../assets/icons/shovel.svg'\r\nimport {ReactComponent as Crash} from '../assets/icons/car-crash.svg'\r\nimport {ReactComponent as Info} from '../assets/icons/information.svg'\r\nimport {ReactComponent as Refresh} from '../assets/icons/refresh.svg'\r\nimport {ReactComponent as Block} from '../assets/icons/road-block.svg'\r\nimport {obstructionType} from \"../enums/enums\";\r\nimport {win} from \"leaflet/src/core/Browser\";\r\n\r\nconst mt = mainTheme;\r\n\r\nconst ListItem = (props) => {\r\n\r\n    const removeElement = () => {\r\n        const copy = props.activeLayers;\r\n\r\n        const idx = copy.indexOf(props.name);\r\n        if(idx > -1)\r\n            copy.splice(copy.indexOf(props.name), 1);\r\n\r\n        props.setActiveLayers([...copy]);\r\n    }\r\n\r\n    if(props.activeLayers.includes(props.name))\r\n    {\r\n        return(\r\n            <li style={props.activeStyle} onClick={removeElement} className='item' >\r\n                {props.children}\r\n            </li>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <li style={props.style} onClick={() => props.setActiveLayers([...props.activeLayers, props.name])} className='item'>\r\n            {props.children}\r\n        </li>\r\n    )\r\n}\r\n\r\nconst SideBar = props => {\r\n\r\n    return (\r\n        <aside style={props.style}>\r\n            <ul style={ulStyle}>\r\n                <li style={{...liStyle, background: mt.colorsDark.strongYellow, height: '20%',fontSize: mt.fonts.size.s, fontWeight: 700, color: mt.colorsDark.mainBack}}>\r\n                    Utrudnienia\r\n                </li>\r\n                <ListItem name={'U'} activeLayers={props.activeLayers} setActiveLayers={props.setActiveLayers}  style={liStyle} activeStyle={activeLi}>\r\n                    {(props.activeLayers.includes('U')) ? <RoadWork style={{...imgStyle, fill: mt.colorsDark.mainBack}}/> : <RoadWork style={imgStyle}/>}\r\n                    {obstructionType['U']}\r\n                </ListItem>\r\n                <ListItem name={'I'} activeLayers={props.activeLayers} setActiveLayers={props.setActiveLayers}  style={liStyle} activeStyle={activeLi}>\r\n                    {(props.activeLayers.includes('I')) ? <Info style={{...imgStyle, fill: mt.colorsDark.mainBack}}/> : <Info style={imgStyle}/>}\r\n                    {obstructionType['I']}\r\n                </ListItem>\r\n                <ListItem name={'W'} activeLayers={props.activeLayers} setActiveLayers={props.setActiveLayers}  style={liStyle} activeStyle={activeLi}>\r\n                    {(props.activeLayers.includes('W')) ? <Crash style={{...imgStyle, height: '4.5vh', fill: mt.colorsDark.mainBack}}/> : <Crash style={{...imgStyle, height: '4.5vh'}}/>}\r\n                    {obstructionType['W']}\r\n                </ListItem>\r\n                <ListItem name={'C'} activeLayers={props.activeLayers} setActiveLayers={props.setActiveLayers}  style={liStyle} activeStyle={activeLi}>\r\n                    {(props.activeLayers.includes('C')) ? <Block style={{...imgStyle, height: '3.5vh', fill: mt.colorsDark.mainBack}}/> : <Block style={{...imgStyle, height: '3.5vh'}}/>}\r\n                    {obstructionType['C']}\r\n                </ListItem>\r\n                <div style={{flexGrow: 1}}></div>\r\n                <li onClick={() => window.location.reload()} style={refresh} className='item'>\r\n                    <Refresh style={{...imgStyle}} />\r\n                    Odśwież\r\n                </li>\r\n            </ul>\r\n        </aside>\r\n    )\r\n}\r\n\r\nconst imgStyle = {\r\n    height: '3vh',\r\n    width: 'auto',\r\n    marginRight: '1vw',\r\n    fill: mt.colorsDark.lightYellow\r\n}\r\n\r\nconst ulStyle = {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexFlow: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    gap: '0.25vh',\r\n    position: 'relative'\r\n}\r\n\r\nconst liStyle = {\r\n    width: '100%',\r\n    height: '15%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: mt.fonts.size.xs,\r\n    color: mt.colorsDark.lightYellow,\r\n    background: mt.colorsDark.lightBack\r\n}\r\n\r\nconst activeLi = {\r\n    ...liStyle,\r\n    color: mt.colorsDark.mainBack,\r\n    background: mt.colorsDark.lightYellow\r\n}\r\n\r\nconst refresh = {\r\n    ...liStyle,\r\n    background: mt.colorsDark.blue,\r\n    height: '20%',\r\n    color: mt.colorsDark.lightYellow\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SideBar;","E:\\Projekty\\Webstorm\\gis\\src\\enums\\enums.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\firebase.js",[],["99","100"],"E:\\Projekty\\Webstorm\\gis\\src\\screens\\404.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\screens\\ErrorPage.js",["101"],"import React, {useEffect} from 'react'\r\nimport styles from \"../themes/styles\";\r\nimport mainTheme from \"../themes/main\";\r\n\r\nconst mt = mainTheme;\r\n\r\nconst Button = props => {\r\n\r\n    const btn = {\r\n        ...styles.btn,\r\n        height: '10vh',\r\n        width: '60vh',\r\n        background: (props.primary) ?  styles.btn.background : props.fill,\r\n        color: (props.primary) ?  styles.btn.color : mt.colorsDark.lightYellow\r\n    }\r\n\r\n    return(\r\n        <div className={'btn'} onClick={props.navigate} style={btn}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ErrorPage = props => {\r\n\r\n\r\n    const pageStyle = {\r\n        ...styles.page,\r\n        background: (props.mode) ? styles.page.background : mt.colorsNormal.mainBack,\r\n        color: (props.mode) ? mt.colorsDark.lightYellow : mt.colorsDark.mainBack,\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        gap: '3vh'\r\n    }\r\n\r\n    return (\r\n        <div style={pageStyle}>\r\n            {props.children}\r\n            <Button navigate={props.navigate} fill={props.fill} primary={props.primary}>\r\n                {props.button}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","E:\\Projekty\\Webstorm\\gis\\src\\screens\\NotLoaded.js",[],"E:\\Projekty\\Webstorm\\gis\\src\\services\\RequestService.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":18,"nodeType":"108","messageId":"109","endLine":2,"endColumn":28},{"ruleId":"106","severity":1,"message":"110","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":33},{"ruleId":"111","severity":1,"message":"112","line":51,"column":65,"nodeType":"113","messageId":"114","endLine":51,"endColumn":66},{"ruleId":"111","severity":1,"message":"112","line":51,"column":85,"nodeType":"113","messageId":"114","endLine":51,"endColumn":86},{"ruleId":"111","severity":1,"message":"112","line":55,"column":67,"nodeType":"113","messageId":"114","endLine":55,"endColumn":68},{"ruleId":"111","severity":1,"message":"112","line":67,"column":73,"nodeType":"113","messageId":"114","endLine":67,"endColumn":74},{"ruleId":"111","severity":1,"message":"112","line":67,"column":93,"nodeType":"113","messageId":"114","endLine":67,"endColumn":94},{"ruleId":"111","severity":1,"message":"112","line":71,"column":75,"nodeType":"113","messageId":"114","endLine":71,"endColumn":76},{"ruleId":"111","severity":1,"message":"112","line":77,"column":82,"nodeType":"113","messageId":"114","endLine":77,"endColumn":83},{"ruleId":"111","severity":1,"message":"112","line":77,"column":102,"nodeType":"113","messageId":"114","endLine":77,"endColumn":103},{"ruleId":"106","severity":1,"message":"115","line":111,"column":20,"nodeType":"108","messageId":"109","endLine":111,"endColumn":29},{"ruleId":"106","severity":1,"message":"116","line":112,"column":24,"nodeType":"108","messageId":"109","endLine":112,"endColumn":37},{"ruleId":"106","severity":1,"message":"117","line":113,"column":23,"nodeType":"108","messageId":"109","endLine":113,"endColumn":35},{"ruleId":"106","severity":1,"message":"118","line":114,"column":20,"nodeType":"108","messageId":"109","endLine":114,"endColumn":29},{"ruleId":"106","severity":1,"message":"119","line":115,"column":24,"nodeType":"108","messageId":"109","endLine":115,"endColumn":37},{"ruleId":"106","severity":1,"message":"120","line":116,"column":25,"nodeType":"108","messageId":"109","endLine":116,"endColumn":39},{"ruleId":"121","severity":1,"message":"122","line":145,"column":8,"nodeType":"123","endLine":145,"endColumn":20,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":168,"column":8,"nodeType":"123","endLine":168,"endColumn":34,"suggestions":"126"},{"ruleId":"106","severity":1,"message":"127","line":34,"column":17,"nodeType":"108","messageId":"109","endLine":34,"endColumn":21},{"ruleId":"106","severity":1,"message":"128","line":9,"column":9,"nodeType":"108","messageId":"109","endLine":9,"endColumn":12},{"ruleId":"102","replacedBy":"129"},{"ruleId":"104","replacedBy":"130"},{"ruleId":"106","severity":1,"message":"131","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'setUTypes' is assigned a value but never used.","'setUWarnTypes' is assigned a value but never used.","'setInfoTypes' is assigned a value but never used.","'setWTypes' is assigned a value but never used.","'setWWarnTypes' is assigned a value but never used.","'setClosedRoads' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'infoTypes', 'props', 'uTypes', and 'uTypesWarn'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["134"],"React Hook useEffect has missing dependencies: 'closedRoads', 'wTypes', and 'wTypesWarn'. Either include them or remove the dependency array.",["135"],"'item' is assigned a value but never used.","'win' is defined but never used.",["132"],["133"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [infoTypes, props, props.mode, uTypes, uTypesWarn]",{"range":"140","text":"141"},"Update the dependencies array to be: [activeLayers, closedRoads, props.mode, wTypes, wTypesWarn]",{"range":"142","text":"143"},[6361,6373],"[infoTypes, props, props.mode, uTypes, uTypesWarn]",[7105,7131],"[activeLayers, closedRoads, props.mode, wTypes, wTypesWarn]"]